name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  go-build-test:
    strategy:
      fail-fast: false
      matrix:
        platform: [ ubuntu-latest, macos-latest ]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Vet
        run: go vet

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          skip-go-installation: true

      - name: Create dummy kubeconfig
        run: mkdir -p ~/.kube && echo "dummy" > ~/.kube/config

      - name: Test
        run: go test -v ./...

      - name: Build
        run: CGO_ENABLED=0 go build -v -o bin/kubescout .

      - name: CLI Sanity
        run: bin/kubescout --help

      - name: Verify binary on Alpine
        if: matrix.platform == 'ubuntu-latest'
        uses: docker://alpine:latest
        with:
          entrypoint: bin/kubescout
          args: --help

      - name: Verify binary on Debian
        if: matrix.platform == 'ubuntu-latest'
        uses: docker://debian:buster
        with:
          entrypoint: bin/kubescout
          args: --help

      - name: Verify binary on CentOS
        if: matrix.platform == 'ubuntu-latest'
        uses: docker://centos:8
        with:
          entrypoint: bin/kubescout
          args: --help

      - name: Set binary name
        id: binname
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          PLATFORM=""
          if [ "${{ matrix.platform }}" == "ubuntu-latest" ]; then
            PLATFORM="linux"
          elif [ "${{ matrix.platform }}" == "macos-latest" ]; then
            PLATFORM="osx"
          else
            echo "Unsupported platform ${{ matrix.platform }}"
            exit 1
          fi
          BINNAME="kubescout-$PLATFORM"
          echo BINNAME=$BINNAME
          echo "::set-output name=binname::$BINNAME"

      - name: Upload binary artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.binname.outputs.binname }}
          path: bin/kubescout

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Start minikube
        uses: medyagh/setup-minikube@master

      - name: Integration Test
        run: go test -v --tags=integration ./integration_test.go

  docker-helm-sanity:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Docker build verification
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          cache-from: reallyliri/kubescout:latest
          CHART_VALUES: ./chart/values.yaml

      - name: Verify template syntax
        run: ! grep --include=\*.yaml -rnw chart/templates -e '{ \+{' -e '} \+}'

      - name: Helm lint
        uses: igabaydulin/helm-check-action@0.1.4
        env:
          CHART_LOCATION: ./chart
